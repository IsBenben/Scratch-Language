/* Powered by Scratch-Lang */

// 反复横跳
#define TIME_2 TIME_3
#define 0.8 TIME_1
#define TIME_1 TIME_2

// 测试数组
#include <examples/array.scl>

; ; ; ; ; ; ; ; ; ; ; ; ; ; ;

const TIME = TIME_3;  // 定义常量time 0.8，不可更改
array a = [1, 2, 3, 4, 5];
array b = a;  // copy a array
b[1] = 10;
a = [5] + a;
looks_sayforsecs("Item (10) b[1]: " .. b[1], TIME);
looks_sayforsecs("Item (5) a[1]: " .. a[1], TIME);

/**
 * 说a，b秒
 */
function test_function(a, b) {
    looks_say(a)
    control_wait \
        (b)
    looks_say("")
}

var magical_number = +-+-++---+-+234 // 定义变量magical_number=234
{
    function test_function(a, b) {
        looks_sayforsecs(b, a)
    }
    var magical_number = 114514 
    // 在另一个作用域定义同名变量
    test_function("1213213"[1], magical_number) // 说114514，1秒后消失
    // 不影响外部作用域
}
magical_number -= 1
test_function(magical_number, TIME) // 说233，按照外面的函数调用
looks_sayforsecs(10 + 20, TIME) // 说10+20
looks_sayforsecs(7 % 3 * (10 + 30) / 5, TIME) // 说7%3*(10+30)/5
looks_sayforsecs("e: " .. e, TIME) // 说e≈2.718

if (magical_number >= 100) {
    looks_sayforsecs("Greater than 100", TIME) // 说Greater than 100
    if (magical_number == 233) {
        var magical_number = "114514192331919810"
        if ("233" in magical_number) {
            looks_sayforsecs("Found 233!!!", TIME) // 说233!!!
        } else {
            looks_sayforsecs("Ordinary Text: " .. magical_number, TIME) // 说原始值
        }
    }
    
    clone {
        // 克隆一个新的克隆体
        looks_sayforsecs("I'm a clone!", TIME)
        while (!(false || true && (true && false))) { // true
            looks_sayforsecs("Infinite loop", TIME)
        }
    }
} else {
    looks_sayforsecs("Less than or equal to 100", +inf)
}
