{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "Scratch Language",
  "patterns": [
    {
      "include": "#comment"
    },
    {
      "include": "#program"
    }
  ],
  "repository": {
    "comment": {
      "begin": "/\\*",
      "end": "\\*/",
      "name": "comment.block.scl"
    },
    "program": {
      "patterns": [
        {
          "match": "//.*",
          "name": "comment.line.double-slash.scl"
        },
        {
          "match": ";",
          "name": "punctuation.terminator.statement.scl"
        },
        {
          "match": "\\(",
          "name": "punctuation.section.parens.begin.scl"
        },
        {
          "match": "\\)",
          "name": "punctuation.section.parens.end.scl"
        },
        {
          "match": "\\{",
          "name": "punctuation.section.braces.begin.scl"
        },
        {
          "match": "\\}",
          "name": "punctuation.section.braces.end.scl"
        },
        {
          "match": "\\[",
          "name": "punctuation.section.brackets.begin.scl"
        },
        {
          "match": "\\]",
          "name": "punctuation.section.brackets.end.scl"
        },
        {
          "match": ",",
          "name": "punctuation.separator.comma.scl"
        },
        {
          "match": "#",
          "name": "meta.preprocessor.scl"
        },
        {
          "match": "\\b(const|var|array)\\b",
          "name": "storage.modifier.scl"
        },
        {
          "match": "\\b(if|else|while|until|clone|for|function)\\b",
          "name": "keyword.control.scl"
        },
        {
          "match": "\\b(delete|in|contain)\\b",
          "name": "keyword.operator.scl"
        },
        {
          "match": "\\b(true|false)\\b",
          "name": "constant.language.boolean.scl"
        },
        {
          "match": "\\b(attribute)\\b",
          "name": "keyword.other.scl"
        },
        {
          "match": "[1-9]\\d*\\.\\d*|0?\\.\\d+",
          "name": "constant.numeric.float.scl"
        },
        {
          "match": "0b[0-1]+|0o[0-7]+|0x[0-9a-fA-F]+|[1-9]\\d*|0",
          "name": "constant.numeric.integer.scl"
        },
        {
          "match": "\".*?\"",
          "name": "string.quoted.double.scl"
        },
        {
          "match": "==|!=|<=|>=|<|>",
          "name": "keyword.operator.comparison.scl"
        },
        {
          "match": "=|\\+=|-=|\\*=|/=|%=",
          "name": "keyword.operator.assignment.scl"
        },
        {
          "match": "->|[+\\-*/%]|\\.{2}|!|\\|\\||&&",
          "name": "keyword.operator.arithmetic.scl"
        }
      ]
    }
  },
  "scopeName": "source.scl"
}
